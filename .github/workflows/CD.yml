name: Project Setup Tool CD

on:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:

  build:
    outputs:
      imageTag: ${{ steps.imageTag.outputs.tag }}

    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4

    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Create image tag
      id: imageTag
      run: |
        branch=${{ github.ref_name }}
        echo "tag=${branch//'/'/'-'}-${{ github.run_number }}-$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT

    - name: Extract metadata (tags, labels) for API image
      id: metaApi
      uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      with:
        images: ${{ env.REGISTRY }}/nbgdevelopment/pst-api
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=raw,value=${{ steps.imageTag.outputs.tag }}

      # https://github.com/docker/build-push-action#inputs
    - name: Build and push API Docker image
      uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
      with:
        context: ./src
        file: ./src/NbgDev.Pst.Api/Dockerfile
        push: true
        tags: ${{ steps.metaApi.outputs.tags }}
        labels: ${{ steps.metaApi.outputs.labels }}

    - name: Extract metadata (tags, labels) for Web image
      id: metaWeb
      uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      with:
        images: ${{ env.REGISTRY }}/nbgdevelopment/pst-web
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=raw,value=${{ steps.imageTag.outputs.tag }}

      # https://github.com/docker/build-push-action#inputs
    - name: Build and push Web Docker image
      uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
      with:
        context: ./src
        file: ./src/NbgDev.Pst.Web/Dockerfile
        push: true
        tags: ${{ steps.metaWeb.outputs.tags }}
        labels: ${{ steps.metaWeb.outputs.labels }}

    - name: Output image tag
      run: echo "Image tag ${{ steps.imageTag.outputs.tag }} published" >> $GITHUB_STEP_SUMMARY

  deploy-dev:
    needs: build

    runs-on: ubuntu-latest

    environment: dev

    steps:
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      run: terraform init -backend-config key="${{ vars.STAGE }}.tfstate" -backend-config sas_token="${{ secrets.SAS_TOKEN_STATES }}"
      working-directory: ./src/.azure

    - name: Terraform Apply
      run: terraform apply `
        -var 'stage=dev'
        -var 'subscription_id=${{ vars.SUBSCRIPTION_ID }}' `
        -var 'image_api=${{ env.REGISTRY }}/nbgdevelopment/pst-api:${{ needs.build.outputs.imageTag }}' `
        -var 'image_web=${{ env.REGISTRY }}/nbgdevelopment/pst-web:${{ needs.build.outputs.imageTag }}' `
        -var 'registry_username=${{ vars.REGISTRY_USERNAME }}' `
        -var 'registry_password=${{ secrets.REGISTRY_PASSWORD }}' `
        -auto-approve
      working-directory: ./src/.azure
      env:
        ARM_CLIENT_ID: ${{ vars.DEPLOYMENT_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.DEPLOYMENT_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: "${{ vars.SUBSCRIPTION_ID }}"
        ARM_TENANT_ID: ${{ vars.DEPLOYMENT_TENANT_ID }}